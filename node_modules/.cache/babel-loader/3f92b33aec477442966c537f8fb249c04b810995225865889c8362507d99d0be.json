{"ast":null,"code":"var _jsxFileName = \"/Users/sreekarreddy/Downloads/planical modern template-react/src/components/USAMap.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport * as d3 from 'd3';\nimport { geoPath, geoAlbersUsa } from 'd3-geo';\nimport { feature } from 'topojson-client';\nimport usaTopoJson from '../data/states-10m.json';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst USAMap = ({\n  stateClicked,\n  setStateClicked\n}) => {\n  _s();\n  const svgRef = useRef();\n  const [activeState, setActiveState] = useState(null); // State to track the currently active state\n\n  // Timer for single click\n  const clickTimerRef = useRef(null);\n  useEffect(() => {\n    const svg = d3.select(svgRef.current);\n    const width = 960;\n    const height = 600;\n\n    // Clear any previous content\n    svg.selectAll('*').remove();\n\n    // Set up projection and path\n    const projection = geoAlbersUsa().scale(1300).translate([width / 2, height / 2]);\n    const path = geoPath().projection(projection);\n\n    // Convert TopoJSON to GeoJSON\n    const states = feature(usaTopoJson, usaTopoJson.objects.states);\n\n    // Create a tooltip div\n    const tooltip = d3.select(\"#tooltip\");\n\n    // Append states to the map\n    svg.selectAll('path').data(states.features).enter().append('path').attr('d', path).attr('fill', d => activeState === d.properties.name ? '#80FF44' : '#ddd') // Change color based on active state\n    .attr('stroke', '#333').attr('class', 'state').on('mouseover', function (event, d) {\n      d3.select(this).attr('fill', '#80FF44');\n      const stateName = d.properties.name;\n\n      // Show tooltip\n      tooltip.transition().duration(200).style(\"visibility\", \"visible\");\n      tooltip.html(stateName).style(\"left\", event.pageX + 5 + \"px\") // Position tooltip near the cursor\n      .style(\"top\", event.pageY - 28 + \"px\");\n    }).on('mouseout', function () {\n      if (activeState !== d3.select(this).data()[0].properties.name) {\n        // Don't change fill if active\n        d3.select(this).attr('fill', '#ddd');\n      }\n\n      // Hide tooltip\n      tooltip.transition().duration(200).style(\"visibility\", \"hidden\");\n    }).on('click', function (event, d) {\n      const clickedStateName = d.properties.name;\n\n      // Clear previous timeout if it exists\n      clearTimeout(clickTimerRef.current);\n\n      // Set a timeout to handle single click\n      clickTimerRef.current = setTimeout(() => {\n        // If state is already active, set it to inactive\n        if (activeState === clickedStateName) {\n          setActiveState(null);\n          setStateClicked(false); // Set clicked state to false\n        } else {\n          setActiveState(clickedStateName); // Set the clicked state as active\n          setStateClicked(true); // Update the stateClicked to true when a state is clicked\n        }\n        console.log(`Clicked on: ${clickedStateName}`);\n      }, 300); // Adjust this delay as necessary (300ms is a common threshold for distinguishing between single and double clicks)\n    }).on('dblclick', function (event, d) {\n      // Clear the timeout for single click action\n      clearTimeout(clickTimerRef.current);\n      const clickedStateName = d.properties.name;\n\n      // Reset the active state and set clicked state to false on double click\n      setActiveState(null);\n      setStateClicked(false); // Ensure facilities list is hidden\n      console.log(`Double clicked on: ${clickedStateName}`);\n    });\n    return () => {\n      clearTimeout(clickTimerRef.current); // Clear timeout on unmount\n    };\n  }, [activeState, setStateClicked]); // Add activeState to the dependency array\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef,\n      width: 960,\n      height: 600\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"tooltip\",\n      style: {\n        position: 'absolute',\n        visibility: 'hidden',\n        background: '#fff',\n        border: '1px solid #ccc',\n        padding: '5px',\n        borderRadius: '3px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(USAMap, \"9+akFHEl0ZUo9YdL+pKp5aBgxoM=\");\n_c = USAMap;\nexport default USAMap;\nvar _c;\n$RefreshReg$(_c, \"USAMap\");","map":{"version":3,"names":["React","useEffect","useRef","useState","d3","geoPath","geoAlbersUsa","feature","usaTopoJson","jsxDEV","_jsxDEV","Fragment","_Fragment","USAMap","stateClicked","setStateClicked","_s","svgRef","activeState","setActiveState","clickTimerRef","svg","select","current","width","height","selectAll","remove","projection","scale","translate","path","states","objects","tooltip","data","features","enter","append","attr","d","properties","name","on","event","stateName","transition","duration","style","html","pageX","pageY","clickedStateName","clearTimeout","setTimeout","console","log","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","id","position","visibility","background","border","padding","borderRadius","_c","$RefreshReg$"],"sources":["/Users/sreekarreddy/Downloads/planical modern template-react/src/components/USAMap.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport * as d3 from 'd3';\nimport { geoPath, geoAlbersUsa } from 'd3-geo';\nimport { feature } from 'topojson-client';\nimport usaTopoJson from '../data/states-10m.json';\n\nconst USAMap = ({ stateClicked, setStateClicked }) => {\n  const svgRef = useRef();\n  const [activeState, setActiveState] = useState(null); // State to track the currently active state\n\n  // Timer for single click\n  const clickTimerRef = useRef(null);\n\n  useEffect(() => {\n    const svg = d3.select(svgRef.current);\n    const width = 960;\n    const height = 600;\n\n    // Clear any previous content\n    svg.selectAll('*').remove();\n\n    // Set up projection and path\n    const projection = geoAlbersUsa().scale(1300).translate([width / 2, height / 2]);\n    const path = geoPath().projection(projection);\n\n    // Convert TopoJSON to GeoJSON\n    const states = feature(usaTopoJson, usaTopoJson.objects.states);\n\n    // Create a tooltip div\n    const tooltip = d3.select(\"#tooltip\");\n\n    // Append states to the map\n    svg.selectAll('path')\n      .data(states.features)\n      .enter()\n      .append('path')\n      .attr('d', path)\n      .attr('fill', (d) => (activeState === d.properties.name ? '#80FF44' : '#ddd')) // Change color based on active state\n      .attr('stroke', '#333')\n      .attr('class', 'state')\n      .on('mouseover', function (event, d) {\n        d3.select(this).attr('fill', '#80FF44');\n        const stateName = d.properties.name;\n\n        // Show tooltip\n        tooltip.transition().duration(200).style(\"visibility\", \"visible\");\n        tooltip.html(stateName)\n          .style(\"left\", (event.pageX + 5) + \"px\") // Position tooltip near the cursor\n          .style(\"top\", (event.pageY - 28) + \"px\");\n      })\n      .on('mouseout', function () {\n        if (activeState !== d3.select(this).data()[0].properties.name) { // Don't change fill if active\n          d3.select(this).attr('fill', '#ddd');\n        }\n\n        // Hide tooltip\n        tooltip.transition().duration(200).style(\"visibility\", \"hidden\");\n      })\n      .on('click', function (event, d) {\n        const clickedStateName = d.properties.name;\n\n        // Clear previous timeout if it exists\n        clearTimeout(clickTimerRef.current);\n\n        // Set a timeout to handle single click\n        clickTimerRef.current = setTimeout(() => {\n          // If state is already active, set it to inactive\n          if (activeState === clickedStateName) {\n            setActiveState(null);\n            setStateClicked(false); // Set clicked state to false\n          } else {\n            setActiveState(clickedStateName); // Set the clicked state as active\n            setStateClicked(true); // Update the stateClicked to true when a state is clicked\n          }\n          console.log(`Clicked on: ${clickedStateName}`);\n        }, 300); // Adjust this delay as necessary (300ms is a common threshold for distinguishing between single and double clicks)\n\n      })\n      .on('dblclick', function (event, d) {\n        // Clear the timeout for single click action\n        clearTimeout(clickTimerRef.current);\n        const clickedStateName = d.properties.name;\n        \n        // Reset the active state and set clicked state to false on double click\n        setActiveState(null);\n        setStateClicked(false); // Ensure facilities list is hidden\n        console.log(`Double clicked on: ${clickedStateName}`);\n      });\n\n    return () => {\n      clearTimeout(clickTimerRef.current); // Clear timeout on unmount\n    };\n\n  }, [activeState, setStateClicked]); // Add activeState to the dependency array\n\n  return (\n    <>\n      <svg ref={svgRef} width={960} height={600}></svg>\n      <div id=\"tooltip\" style={{ position: 'absolute', visibility: 'hidden', background: '#fff', border: '1px solid #ccc', padding: '5px', borderRadius: '3px' }}></div>\n    </>\n  );\n};\n\nexport default USAMap;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}